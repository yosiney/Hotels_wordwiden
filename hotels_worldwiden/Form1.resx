<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dTEY/gPdwSmDoJuiKQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6gAAAOoB+Ss1JgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAODSURBVFhHzVdN
        aFNBEM7FP/w5CeJR7a0iQsyLsZc0iSlFqrVarahVREVFigfBo1IQS8WLVfqjaPGi4kFU/KFobSlVW22t
        Vjxqf7wkRa2+t0leXpJxZrOh+t4meekPOPDR153Zmdnd+YvDLk2UlCzVfMoe1a9c0/xKP36H8W+cg3+7
        +1Sfu031u2tIVmybObEy50o1oDSjIYYAm2Dk6C+vp0ioKZzA41mEp6lHZZpJeSGIawGlAcqLFgi19og8
        1/yujxKF0wLeRi8+0QqhPjdpm13rcVPIrGQWMKYGN6wVZuSUPvmcGM9gNOtNgNe7EAXemzbMOvA5Xklj
        QgScdFMGrKYC9CuXwOh6DonhIUh8GACj4wnEGuuBVQake6TwuS8Is2miVENG1mhnW30Qf3APwDCAKDk+
        ConBt+jAIKTCIb6WYhroN5pBC3qkOkzQJ33ONcI8nj6d5zJBYPu2Q3LsKxqPQ/z+Xf6/WSZybD8Y3S+4
        I4mBPmAVXouMGVS0uPHv5e5luCAtMqzSz0+bmvwB0bojFr4ZsYazANEIRE+fkPJN0MJe7xIHlVcJk8N4
        9ghA1yFy8pCUL4W9J+BQA65dGHy8tluYkYPV+NhJiN9ut/DyIrARomfqQCvbJOcLqH5XqwM/+s0Mgt7e
        yh1gVWUWXj6wvZUYlSlI9LzM6QQe/jU5MGFmECjKk5+HLet2oV9utONEiBzQTYscFPlGZ4dlPQO9rYlH
        fC6kNJVnBsWSTAci9l84kOMJPlnW7aKQJ5AH4U0RhDvmOAipIsmYkQM702l455aFlxe201BpoSZUI2MS
        jKcPAeJYiOoOS/lS5DH6N1SfUu2gcsj8iioTYNuwFI+NYCn+CdFTRy18M2IN5wovxUTZqiGB3jM58oV3
        QuqIkdoqi0zkeC0YPZ084hPvbDYjqoIZEpMQjdhSYVZRyjshdUSi5LfxqXY8EeZrlHL69at2e0EsGlRW
        CfNpoulVIvgP2O4toDdd5PWBDyRDNJA85ldPnVO2Rwa88fPC7BSB0zkPmd1m4dkGGu/NOqbTwIhCY+ZN
        s4jsQ2mGaHRGwblwYlQtdRULM7npt9e5HAeVLomSaYGu3fYPkwzRO9H0igqkzcomdAo4qC6eL9QWTrGA
        a7Uo17Z/I1Jhozy3pNpMiKoWzXB4ohZM2TdoiH5B0e0QQrRG0zWVVwiuWyy25SGH4w8XBGevOZ/h4gAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>