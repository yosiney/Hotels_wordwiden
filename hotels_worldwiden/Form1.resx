<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADg0lEQVRYR81XTWhTQRDOxT/8OQniUe2tIkLMi7GXNIkpRaq1Wq2oVURFRYoHwaNSEEvFi1X6o2jx
        ouJBVPyhaG0pVVttrVY8an+8JEWtvrdJXl6ScWazofreJnnpDzjw0ded2ZnZ3fmLwy5NlJQs1XzKHtWv
        XNP8Sj9+h/FvnIN/u/tUn7tN9btrSFZsmzmxMudKNaA0oyGGAJtg5Ogvr6dIqCmcwONZhKepR2WaSXkh
        iGsBpQHKixYItfaIPNf8ro8ShdMC3kYvPtEKoT43aZtd63FTyKxkFjCmBjesFWbklD75nBjPYDTrTYDX
        uxAF3ps2zDrwOV5JY0IEnHRTBqymAvQrl8Doeg6J4SFIfBgAo+MJxBrrgVUGpHuk8LkvCLNpolRDRtZo
        Z1t9EH9wD8AwgCg5PgqJwbfowCCkwiG+lmIa6DeaQQt6pDpM0Cd9zjXCPJ4+necyQWD7tkNy7Csaj0P8
        /l3+v1kmcmw/GN0vuCOJgT5gFV6LjBlUtLjx7+XuZbggLTKs0s9Pm5r8AdG6Ixa+GbGGswDRCERPn5Dy
        TdDCXu8SB5VXCZPDePYIQNchcvKQlC+FvSfgUAOuXRh8vLZbmJGD1fjYSYjfbrfw8iKwEaJn6kAr2yTn
        C6h+V6sDP/rNDILe3sodYFVlFl4+sL2VGJUpSPS8zOkEHv41OTBhZhAoypOfhy3rdqFfbrTjRIgc0E2L
        HBT5RmeHZT0Dva2JR3wupDSVZwbFkkwHIvZfOJDjCT5Z1u2ikCeQB+FNEYQ75jgIqSLJmJEDO9NpeOeW
        hZcXttNQaaEmVCNjEoynDwHiWIjqDkv5UuQx+jdUn1LtoHLI/IoqE2DbsBSPjWAp/gnRU0ctfDNiDecK
        L8VE2aohgd4zOfKFd0LqiJHaKotM5HgtGD2dPOIT72w2I6qCGRKTEI3YUmFWUco7IXVEouS38al2PBHm
        a5Ry+vWrdntBLBpUVgnzaaLpVSL4D9juLaA3XeT1gQ8kQzSQPOZXT51TtkcGvPHzwuwUgdM5D5ndZuHZ
        BhrvzTqm08CIQmPmTbOI7ENphmh0RsG5cGJULXUVCzO56bfXuRwHlS6JkmmBrt32D5MM0TvR9IoKpM3K
        JnQKOKguni/UFk6xgGu1KNe2fyNSYaM8t6TaTIiqFs1weKIWTNk3aIh+QdHtEEK0RtM1lVcIrlsstuUh
        h+MPFwRnrzmf4eIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>