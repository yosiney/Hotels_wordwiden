<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        sAAAALABFGqraQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHRSURBVFhHxZcx
        TsNAEEXdoKRISaTkAqHKEZDSchO4RKrcIdT0SU2H6GjSUFIhcQMQtfnPmbE2ZhxMEtiRntiZ/TMTbO+u
        XZRl2QlZT1yJW/EoXsSHwZgYc2h6UY2IMJgiG4uleBcEuoCWnHFUMyUMgqwvFuJTeOGNmIuZmIiBwZgY
        c2hcTy41+lEPiINFMRJPwgutxUWkjUBrOZ5PrVGo/RYoiql4Eziv4rKp6Qq5VgOHmtNvmh1n+5978wdx
        ns4fAjWslv+InSuRCrnnftlJOEuFx0Atq4lDj/qZSEU8LAy4ZEf/502oabVxFnXcJllq/rQffM9/gtrW
        g17VEvUJ1iyDdZqwD9kQvbiO5tuwHAZL86sdzjeZTktNRvNny1lFmjZkLFEG9KR3tXUS2EQJTWRpc/4O
        I90+ZL5Z0bvav3HmkThFdnRzkLFjMqB3dYjgzCKxIztJc5CxbTOgd3WS4UwiMchO1hxknB0M6F0dpziD
        SAyyO9P8lvuWehxgDOid/wdkvwXZH8LsyzD7RpR3K7bgoYfRStxE823Idg8jC+Y9jm0y3wuJCfK+kpkw
        30tpHcj5Wl4Ht1fCbwf834eJI8v3aZYiy/Nx2kT2B5/nZfEFwIJu204YfFoAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4wAAAOMBD+bfpwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAODSURBVFhHzVdN
        aFNBEM7FP/w5CeJR7a0iQsyLsZc0iSlFqrVarahVREVFigfBo1IQS8WLVfqjaPGi4kFU/KFobSlVW22t
        Vjxqf7wkRa2+t0leXpJxZrOh+t4meekPOPDR153Zmdnd+YvDLk2UlCzVfMoe1a9c0/xKP36H8W+cg3+7
        +1Sfu031u2tIVmybObEy50o1oDSjIYYAm2Dk6C+vp0ioKZzA41mEp6lHZZpJeSGIawGlAcqLFgi19og8
        1/yujxKF0wLeRi8+0QqhPjdpm13rcVPIrGQWMKYGN6wVZuSUPvmcGM9gNOtNgNe7EAXemzbMOvA5Xklj
        QgScdFMGrKYC9CuXwOh6DonhIUh8GACj4wnEGuuBVQake6TwuS8Is2miVENG1mhnW30Qf3APwDCAKDk+
        ConBt+jAIKTCIb6WYhroN5pBC3qkOkzQJ33ONcI8nj6d5zJBYPu2Q3LsKxqPQ/z+Xf6/WSZybD8Y3S+4
        I4mBPmAVXouMGVS0uPHv5e5luCAtMqzSz0+bmvwB0bojFr4ZsYazANEIRE+fkPJN0MJe7xIHlVcJk8N4
        9ghA1yFy8pCUL4W9J+BQA65dGHy8tluYkYPV+NhJiN9ut/DyIrARomfqQCvbJOcLqH5XqwM/+s0Mgt7e
        yh1gVWUWXj6wvZUYlSlI9LzM6QQe/jU5MGFmECjKk5+HLet2oV9utONEiBzQTYscFPlGZ4dlPQO9rYlH
        fC6kNJVnBsWSTAci9l84kOMJPlnW7aKQJ5AH4U0RhDvmOAipIsmYkQM702l455aFlxe201BpoSZUI2MS
        jKcPAeJYiOoOS/lS5DH6N1SfUu2gcsj8iioTYNuwFI+NYCn+CdFTRy18M2IN5wovxUTZqiGB3jM58oV3
        QuqIkdoqi0zkeC0YPZ084hPvbDYjqoIZEpMQjdhSYVZRyjshdUSi5LfxqXY8EeZrlHL69at2e0EsGlRW
        CfNpoulVIvgP2O4toDdd5PWBDyRDNJA85ldPnVO2Rwa88fPC7BSB0zkPmd1m4dkGGu/NOqbTwIhCY+ZN
        s4jsQ2mGaHRGwblwYlQtdRULM7npt9e5HAeVLomSaYGu3fYPkwzRO9H0igqkzcomdAo4qC6eL9QWTrGA
        a7Uo17Z/I1Jhozy3pNpMiKoWzXB4ohZM2TdoiH5B0e0QQrRG0zWVVwiuWyy25SGH4w8XBGevOZ/h4gAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>